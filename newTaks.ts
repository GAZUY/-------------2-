

// Задание
// 1
// Написать функцию, которая принимает 2 строки и срав-
// нивает их длину. Функция возвращает 1, если в первой
// строке больше символов, чем во второй; -1 – если во вто-
// рой больше символов, чем в первой; или 0 – если строки
// одинаковой длины.

function comparingTheLines (w,e) {
    if (w.length > e.length) {
        return 1
    }else if (w.length < e.length) {
        return -1
    }else {
        return 0
    }
}

let the_string_compared_1 = 'gfdhfblilh'
let the_string_compared_2 = 'kjiljilonlii'
document.write(comparingTheLines (the_string_compared_1,the_string_compared_2).toString())
// 2
// Написать функцию, которая переводит в верхний регистр
// первый символ переданной строки.

function changingTheCase (w) {
    document.write (`<p>${w[0].toUpperCase()+ w.slice(1)}</p>`)
}
changingTheCase (the_string_compared_1)

// switch(a) {
//     case 'o':
//     case 'a':
//         count++
// }

// 3
// Написать функцию, которая считает количество гласных
// букв в переданной строке.

function countingVowels (w) {
    let a = 0
    for (let i = 0; i < w.length; i ++){
        switch (w[i]) {
            case 'a':
            case 'e':
            case 'i':
            case 'o':
            case 'u':
            a += 1
        }
    }
    document.write (`<p>В вашей строке ${a} гласных</p>`)
}
countingVowels (the_string_compared_2)

// 4
// Написать функцию для проверки спама в переданной
// строке. Функция возвращает true, если строка содержит
// спам. Спамом считать следующие слова: 100% бесплатно,
// увеличение продаж, только сегодня, не удаляйте, ххх.
// Функция должна быть нечувствительна к регистру.


// 5
// Написать функцию сокращения строки. Функция прини-
// мает строку и ее максимальную длину. Если длина строки
// больше, чем максимальная, то необходимо отбросить
// лишние символы, добавив вместо них троеточие.
// Например: truncate(“Hello, world!”, 8) должна вернуть
// “Hello...”.
// 6
// Написать функцию, которая проверяет, является ли пере-
// данная строка палиндромом.
// 7
// Написать функцию, которая считает количество слов в
// предложении.
// 8
// Написать функцию, которая возвращает самое длинное
// слово из предложения.
// 9
// Написать функцию, которая считает среднюю длину слова
// в предложении.
// 10 Написать функцию, которая принимает строку и символ
// и выводит индексы, по которым находится этот символ в
// строке. Также вывести, сколько всего раз встречается этот
// символ в строке.





// Задание 1
// Создать массив из 10 случайных чисел и написать несколько
// функций для работы с ним.
// 1
// Функция принимает массив и выводит его на экран.
// 2
// Функция принимает массив и выводит только четные
// элементы.
// 3
// Функция принимает массив и возвращает сумму всех
// элементов массива.
// 4
// Функция принимает массив и возвращает его максималь-
// ный элемент.
// 5
// Функция добавления нового элемента в массив по ука-
// занному индексу.
// 6
// Функция удаления элемента из массива по указанному
// индексу.
// Задание 2
// Создать еще один массив из 5 случайных чисел и написать
// следующие функции.
// 1
// Функция принимает 2 массива и возвращает новый мас-
// сив, в котором собраны все элементы из двух массивов
// без повторений.

let tenNumbers = []
let min = 3
let max = 50
for (let i = 0; i < 10; i ++) {
 tenNumbers [i] = Math.floor(Math.random() * (max - min + 1) + min - 0.5)   
}


function outputToTheScreen (arr: any []) {
    document.write (`<p>${arr}</p>`)
}
outputToTheScreen(tenNumbers)

function weOutputEvenElements (arr: any []) {
    let arr1 = []
    for (let i = 0; i <10; i++){
       if (arr[i] % 2 == 0) {
           arr1.push( arr[i])
       } 
    }
    return arr1
}

document.write (`<p>Odd ${weOutputEvenElements (tenNumbers)}</p> `)

function sumOfValues (arr: any []) {
    let s = 0
    for (let i = 0; i < 10; i ++){
        s += arr [i]
    }
    document.write (`<p>Сумма элементов равна:${s}</p>`)
}
sumOfValues (tenNumbers)




// Задание 2
// Функция принимает 2 массива и возвращает новый массив,
// в котором собраны общие элементы (то есть элементы,
// которые встречаются и в первом и во втором массивах)
// без повторений.
// 3
// Функция принимает 2 массива и возвращает новый мас-
// сив, в котором собраны все элементы из первого массива,
// которых нет во втором массиве.
// Задание 3
// Создать массив фруктов и отсортировать его по алфавиту.
// Написать следующие функции.
// 1
// Вывод на экран с помощью document.write() в виде списка
// (с помощью тегов ul и li).
// 2
// Поиск фрукта в массиве. Функция принимает название
// фрукта и возвращает индекс найденного элемента или -1,
// если не найден. Поиск должен быть нерегистрозависимым.